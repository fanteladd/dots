#!/bin/sh
# Font preview with ueberzug and fzf
# This is inspired by https://github.com/sdushantha/fontpreview

# TODO: trap 'notify-send hello' WINCH
# Checking for environment variables if available.
# These are compatible with original fontpreview.
SIZE=${FONTPREVIEW_SIZE:-700x700}
FONT_SIZE=${FONTPREVIEW_FONT_SIZE:-64}
BG_COLOR=${FONTPREVIEW_BG_COLOR:-#1a1b2600}
FG_COLOR=${FONTPREVIEW_FG_COLOR:-#c0caf5}
TEXT_ALIGN=${FONTPREVIEW_TEXT_ALIGN:-center}
PREVIEW_TEXT=${FONTPREVIEW_PREVIEW_TEXT:-"ABCDEFGHIJKLM\nNOPQRSTUVWXYZ\n\
abcdefghijklm\nnopqrstuvwxyz\n1234567890\n!@#$\%^&*,.;:\n_-=+'\"|\\(){}[]"}

# Ueberzug related variables
IMAGE=/tmp/image.png
WIDTH=$FZF_PREVIEW_COLUMNS
HEIGHT=$FZF_PREVIEW_LINES
# fzf changes its preview paddings several times, its confusing
VPAD=$(fzf --version | {
    IFS='. ' read -r v1 v2 _
    [ "$v1" = 0 ] && [ "$v2" -le 26 ] && echo 0 || echo 4
})


image_kitty() {
  kitten icat --silent --transfer-mode file --stdin no --place "${2}x${3}@${4}x${5}" "$1" < /dev/null > /dev/tty
  exit 1
}

usage() {
  echo "Usage: fontpreview-ueberzug [-h] [-s FONT_SIZE] [-b BG] [-f FG] [-t TEXT]"
}

preview() {
  [ "$TEXT_ALIGN" = center ] || [ "$TEXT_ALIGN" = south ] || [ "$TEXT_ALIGN" = north ] || PADDING=50
  fontfile=$(echo "$1" | cut -f2)
  # In fzf the cols and lines are those of the preview pane
  convert -size "$SIZE" xc:"$BG_COLOR" -fill "$FG_COLOR" \
      -pointsize "$FONT_SIZE" -font "$fontfile" -gravity "$TEXT_ALIGN" \
      -annotate +${PADDING:-0}+0 "$PREVIEW_TEXT" "$IMAGE" &&
      image_kitty "$IMAGE" "$WIDTH" "$HEIGHT"
}

while getopts "a:hs:b:f:t:" arg; do
    case "$arg" in
        a) TEXT_ALIGN=$OPTARG;;
        s) FONT_SIZE=$OPTARG;;
        b) BG_COLOR=$OPTARG;;
        f) FG_COLOR=$OPTARG;;
        t) PREVIEW_TEXT=$OPTARG;;
        *) usage; exit ;;
    esac
done
shift $((OPTIND - 1))

if [ "$#" = 0 ]; then
    # Export cli args as environment variables for preview command
    TEXT_ALIGN=$(echo "$TEXT_ALIGN" | sed 's/top/north/; s/bottom/south/; s/left/west/; s/right/east/')
    export FONTPREVIEW_TEXT_ALIGN="$TEXT_ALIGN"
    export FONTPREVIEW_FONT_SIZE="$FONT_SIZE"
    export FONTPREVIEW_BG_COLOR="$BG_COLOR"
    export FONTPREVIEW_FG_COLOR="$FG_COLOR"
    export FONTPREVIEW_PREVIEW_TEXT="$PREVIEW_TEXT"
    # The preview command runs this script again with an argument
    fc-list -f "%{family}:%{style}:%{file}\n" |
    grep -i '\.\(ttc\|otf\|ttf\)$' | sort | uniq |
    awk -F: '{split($1,a,","); split($2,b,","); printf("%s",a[1]);
        if(b[1] != "") printf(":style=%s",b[1]); printf("\t%s\n",$3)}' |
    fzf --with-nth 1 --delimiter "\t" --layout=reverse --preview "sh $0 {}" \
        --preview-window "left:50%:noborder:wrap"
elif [ "$#" = 1 ]; then
     clean_kitty
     preview "$1"
fi
