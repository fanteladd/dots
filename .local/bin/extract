#!/bin/sh

# A general, all-purpose extraction script. Not all extraction programs here
# are installed by LARBS automatically.
#
# Default behavior: Extract archive into new directory
# Behavior with `-c` option: Extract contents into current directory

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
    "--help") set -- "$@" "-h" ;;
    "--clean") set -- "$@" "-c" ;;
    "--current") set -- "$@" "-d" ;;
    *)        set -- "$@" "$arg"
  esac
done

while getopts "hcd" o; do case "${o}" in
    d) extracthere="True" ;;
    c) clean="True" ;;
    *) printf "Options:\\n   -d, --current: Extract archive into current directory rather than a new one.\\n   -c, --clean:\\n" && exit 1 ;;
esac done
shift "$(($OPTIND -1))"

if [ -z "$extracthere" ]; then
    archive="$(readlink -f "$*")" &&
    directory="$(echo "$archive" | sed 's/\.[^\/.]*$//')" &&
    mkdir -p "$directory" &&
    cd "$directory" || exit 1
else
    archive="$(readlink -f "$(echo "$*" | cut -d' ' -f2)" 2>/dev/null)"
fi

[ -z "$archive" ] && printf "Give archive to extract as argument.\\n" && exit 1

if [ -f "$archive" ] ; then
    ext="${archive##*.}"
    case "$ext" in
            tar.bz2|tbz2) bsdtar -xf "$archive" ;;
            tar.xz) bsdtar -xf "$archive" ;;
            tar.gz|tgz) bsdtar -xf "$archive" ;;
            tar.zst) bsdtar -xf "$archive" ;;
            tar) bsdtar -xf "$archive" ;;
            lzma) unlzma "$archive" ;;
            bz2) bunzip2 "$archive" ;;
            rar) unrar x -ad "$archive" ;;
            gz) gunzip "$archive" ;;
            zip) unzip "$archive" ;;
            Z) uncompress "$archive" ;;
            7z) 7z x "$archive" ;;
            xz) unxz "$archive" ;;
            exe) cabextract "$archive" ;;
            *) printf "\x1b[33m %s\x1b[0m cannot be extracted\n" "$archive" ;;
    esac
else
    printf "\x1b[31m %s\x1b[0m is not a valid file\n" "$archive"
fi

[ -n "$clean" ] && mv -f "$archive" "$TRASHBIN"
