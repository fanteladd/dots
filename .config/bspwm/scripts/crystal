#!/usr/bin/env sh

hidden_windows=/tmp/crystal_0$(wmctrl -d | grep "\*" | cut -d ' ' -f 1)
hidden_desktops=/tmp/crystal_1$(wmctrl -d | grep "\*" | cut -d ' ' -f 1)
mode="$hidden_windows"_mode

_bc(){
    bspc config "$@"
}

hide_nodes() {
    xdo id -rd | tee "$hidden_windows"
    bspc query -D -d focused | tee "$hidden_desktops"
    while read -r p; do
        bspc node "$p" -g hidden=on
    done < "$hidden_windows"
    bspc node -t fullscreen
}

unhide_nodes() {
    while read -r p; do
            if [ ! "$(grep "$p" /tmp/swallowids | awk '{ print $2 }')" = "$p" ]; then
        bspc node "$p" -g hidden=off
            fi
    done < "$hidden_windows"
    bspc node -t tiled
    : > "$hidden_windows"
    : > "$hidden_desktops"
}

gaps_on(){
    polybar-msg cmd show
    _bc window_gap 7
}

gaps_off(){
    polybar-msg cmd hide
    _bc top_padding 0
    _bc window_gap 0
}

hide_bar() {
    polybar-msg cmd hide
}

show_bar() {
    polybar-msg cmd show
}

case $1 in
	# Used to enter fullscreen mode
    --fullscreen)
        if [ -s "$mode" ]; then
          : > "$mode"
          unhide_nodes
                show_bar
            else
          echo mono > "$mode"
          hide_nodes
            hide_bar
        fi
        ;;

    # Used to enable and disable gaps
    --gaps)
        if [ "$(_bc window_gap)" = "0" ]; then
            gaps_on
        else
          gaps_off
        fi
        ;;

    # Used to send a node to another desktop
    --send)
        bspc node -d "$2" --follow
        if [ "$(_bc window_gap)" != "0" ]; then
          show_bar
        fi
        unhide_nodes
        ;;


    # Used when focusing on another desktop
    --focus)
            bspc desktop -f "$2"
            hidden_desktops=/tmp/crystal_1$(wmctrl -d | grep "\*" | cut -d ' ' -f 1)
            if [ "$(cat "$hidden_desktops")" = ""  ] && [ "$(_bc window_gap)" != "0" ]; then
                    show_bar
            else
                    hide_bar
    fi
            ;;

    # Used when killing a node
    --kill)
            bspc node -k
            unhide_nodes
            show_bar
            ;;

    # Used when closing a node
    --close)
            xdo close
            unhide_nodes
            show_bar
            ;;
  *) : ;;

esac
